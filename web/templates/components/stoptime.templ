package components;

import "github.com/KrisjanisP/personal-dashboard/internal/domain"
import "fmt"

templ StopTimeComponent(category *domain.WorkCategory, marshalledTime string) {
	<form hx-put="/time/stop"  hx-target="body" hx-disabled-elt="input, button">
		<table>
			<tbody>
				<tr>
					<td>
						<label for="work-category">Select work category:</label>
					</td>
					<td>
                        {category.Abbreviation}
                        <input type="hidden" name="work-category" value={fmt.Sprintf("%v",category.Abbreviation)}/>
					</td>
				</tr>
				<tr>
					<td>
						Time spent:
					</td>
					<td>
						<code id="time-elapsed">00:00:00</code> (hh:mm:ss)
					</td>
				</tr>
				<tr>
					<td colspan="2" align="right">
						<button type="submit" id="start-button">Stop tracking time</button>
					</td>
				</tr>
			</tbody>
		</table>
        <input type="hidden" id="time-start" name="start" value={marshalledTime}/>
        <input type="hidden" id="time-input" name="seconds"/>
        @templ.JSONScript("start-time", marshalledTime)
        <script>
        if (typeof start === 'undefined') {
            var start = new Date(JSON.parse(document.getElementById('start-time').textContent));
        } else {
            start = new Date(JSON.parse(document.getElementById('start-time').textContent));
        }

        if (typeof intervalUpdElapsedTime !== 'undefined') {
            clearInterval(interval);
        } else {
            let intervalUpdElapsedTime = setInterval(() => {
                try {
                    let currentTime = new Date();
                    elapsedTime = new Date(currentTime - start);
                    formatted = elapsedTime.toISOString().substr(11, 8);
                    if (formatted.match(/^[0-9]{2}:[0-9]{2}:[0-9]{2}$/)) {
                        document.getElementById('time-elapsed').textContent = formatted;
                        document.getElementById('time-input').value = (elapsedTime.getTime() / 1000).toFixed(0);
                    }
                } catch (e) {
                    clearInterval(intervalUpdElapsedTime);
                }
            }, 1000);
        }

        </script>
	</form>
}
